name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER: tfip-miniproject
  GKE_ZONE: asia-southeast1-a
  DEPLOYMENT_NAME: tfip-miniproject
  BACKEND_IMAGE: sb-backend-image
  FRONTEND_IMAGE: ng-frontend-image
  TAG: ${{ github.sha }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, Deploy
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Checkout
        uses: actions/checkout@v3
        
      - id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
          
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          version: 'latest'
          project_id: ${{ secrets.PROJECT_ID }}
          
      - name: Configure Docker
        run: |-
          gcloud --quiet auth configure-docker
          
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Create Kubernetes Secret
        run: |-
          rm app-secret
          kubectl create secret generic app-secret --from-literal=jwt-signing-key=${{ secrets.JWT_SIGNINGKEY }} --from-literal=mysql-url=${{ secrets.MYSQL_URL }} --from-literal=mongodb-uri=${{ secrets.MONGODB_URI }} --dry-run=client -o yaml | kubectl apply -f -
          
      - name: Build Docker images
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$TAG" ./ng-frontend/
          docker build --tag "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$TAG" ./sb-backend/
      
      - name: Push Docker images to Google Container Registry
        run: |-
          docker push "gcr.io/$PROJECT_ID/$FRONTEND_IMAGE:$TAG"
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$TAG"
      
      # - name: Create Kubernetes Secret
      #   run: |-
      #     export MYSQL_URL=${{ secrets.MYSQL_URL }}
      #     export MONGODB_URI=${{ secrets.MONGODB_URI }}
      #     export JWT_SIGNINGKEY=${{ secrets.JWT_SIGNINGKEY }}
      #     envsubst < ./k8s/app-secret-template.yaml > ./k8s/app-secret.yaml
      
      - name: Substitute image names in deployment manifests
        run: |-
          envsubst < ./k8s/sb-backend-template.yaml > ./k8s/sb-backend.yaml
          envsubst < ./k8s/ng-frontend-template.yaml > ./k8s/ng-frontend.yaml
    
      - name: Deploy
        run: |-
          kubectl apply -f ./k8s/app-secret.yaml
          kubectl apply -f ./k8s/sb-backend.yaml
          kubectl apply -f ./k8s/ng-frontend.yaml
          kubectl apply -f ./k8s/app-ingress.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide

